// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// model articles {
//   id         Int             @id @default(autoincrement())
//   user_id    Int
//   title      String
//   body       String
//   created_at DateTime?       @default(now())
//   updated_at DateTime?
//   deleted_at DateTime?
//   users      User           @relation(fields: [user_id], references: [id])
//   comments   comments[]

//   @@index([user_id], name: "user_id")
// }

// model comments {
//   id         Int       @id @default(autoincrement())
//   article_id Int
//   user_id    Int
//   body       String
//   created_at DateTime? @default(now())
//   updated_at DateTime?
//   deleted_at DateTime?
//   articles   articles  @relation(fields: [article_id], references: [id])
//   users      users     @relation(fields: [user_id], references: [id])

//   @@index([article_id], name: "article_id")
//   @@index([user_id], name: "user_id")
// }

// model User {
//   id         Int          @id @default(autoincrement())
//   email      String       @unique
//   password   String
//   created_at DateTime?    @default(now())
//   updated_at DateTime?
//   deleted_at DateTime?
//   articles   articles[]
//   comments   comments[]
// }

model Categorie {
  id         Int       @id @default(autoincrement())
  name       String
  created_at DateTime? @default(now())

  Product Product[]
  @@map("categories")
}

model Product {
  id          Int       @id @default(autoincrement())
  koreanname  String
  englishname String?
  categoryId  Int
  created_at  DateTime? @default(now())
  categories  Categorie @relation(fields: [categoryId], references: [id])

  Product_images    Product_images[]
  product_allergies product_allergies[]
  nutrition         nutrition?
  @@map("products")
}

model Product_images {
  id         Int       @id @default(autoincrement())
  imageUrl   String
  product_id Int
  created_at DateTime? @default(now())
  products   Product   @relation(fields: [product_id], references: [id])

  @@map("products_images")
}

model allergie {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  created_at DateTime? @default(now())

  product_allergies product_allergies[]
  @@map("allergies")
}

model product_allergies {
  id         Int       @id @default(autoincrement())
  product_id Int
  allergy_id Int
  created_at DateTime? @default(now())
  products   Product   @relation(fields: [product_id], references: [id])
  allergies  allergie  @relation(fields: [allergy_id], references: [id])

  @@map("products_allergies")
}

model nutrition {
  id         Int       @id @default(autoincrement())
  product_id Int       @unique
  calories   String?
  caffein    String?
  fat        String?
  sugar      String?
  sodium     String?
  protein    String?
  created_at DateTime? @default(now())
  products   Product   @relation(fields: [product_id], references: [id])


  @@map("nutritions")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  usename       String?
  address       String?
  phone_number  String?
  policy_agreed Boolean?  @default(true)
  created_at    DateTime? @default(now())
  updated_at    DateTime?

  @@map("users")
}
